#!/bin/bash
#
# squeezecenter		Startup script for the SqueezeCenter Music Server
#
# chkconfig:		345 80 30
# description:		SqueezeCenter powers the Squeezebox, Transporter and SLIMP3 network music \
#			players and is the best software to stream your music to any software MP3 \
#			player. It supports MP3, AAC, WMA, FLAC, Ogg Vorbis, WAV and more!
# processname:		squeezecenter
# config: 		/etc/squeezecenter/squeezecenter.conf
# config:		/etc/sysconfig/squeezecenter

#
### BEGIN INIT INFO
# Provides:		squeezecenter
# Required-Start:	$syslog $remote_fs
# Should-Start:		$time ypbind sendmail
# Required-Stop:	$syslog $remote_fs
# Should-Stop:		$time ypbind sendmail
# Default-Start:	3 5
# Default-Stop:		0 1 2 6
# Short-Description:	Startup script for the SqueezeCenter Music Server
# Description:		SqueezeCenter powers the Squeezebox, Transporter and SLIMP3 network music \
#			players and is the best software to stream your music to any software MP3 \
#			player. It supports MP3, AAC, WMA, FLAC, Ogg Vorbis, WAV and more!
### END INIT INFO
# 

if [ -f /etc/redhat-release ] ; then

	# Source function library.
	. /etc/rc.d/init.d/functions
	# Source networking configuration.
	. /etc/sysconfig/network
	# Check that networking is up.
	[ ${NETWORKING} = "no" ] && exit 0

	# Check for existence of needed config file and read it
	SQUEEZECENTER_CONFIG=/etc/sysconfig/squeezecenter
	test -r $SQUEEZECENTER_CONFIG || { echo "$SQUEEZECENTER_CONFIG not existing";
		if [ "$1" = "stop" ]; then exit 0;
		else exit 6; fi; }

	# Read config	
	. $SQUEEZECENTER_CONFIG

	# Check for missing binaries (stale symlinks should not happen)
	# Note: Special treatment of stop for LSB conformance
	SQUEEZECENTER_BIN="$SQUEEZECENTER_HOME/squeezecenter-server"
	test -x $SQUEEZECENTER_BIN || { echo "$SQUEEZECENTER_BIN not installed"; 
		if [ "$1" = "stop" ]; then exit 0;
		else exit 5; fi; }

	LOCKFILE="/var/lock/subsys/squeezecenter"
	RETVAL=0

	start() {
		echo -n "Starting SqueezeCenter: "
		daemon --user $SQUEEZECENTER_USER $SQUEEZECENTER_BIN $SQUEEZECENTER_ARGS
		RETVAL=$?
		echo
		[ $RETVAL -eq 0 ] && touch $LOCKFILE
		return $RETVAL
	}

	stop() {
		echo -n "Stopping SqueezeCenter: "
		killproc -d 6 $SQUEEZECENTER_BIN
		RETVAL=$?
		echo
		[ $RETVAL -eq 0 ] && rm -f $LOCKFILE
		return $RETVAL
	}

	restart() {
		stop
		start
	}

	condrestart() {
		[ -f $LOCKFILE ] && restart || :
	}

	fdr_status() {
        	status $SQUEEZECENTER_BIN
       		RETVAL=$?
	}

elif [ -f /etc/SuSE-release ] ; then

	# Check for existence of needed config file and read it
	SQUEEZECENTER_CONFIG=/etc/sysconfig/squeezecenter
	test -r $SQUEEZECENTER_CONFIG || { echo "$SQUEEZECENTER_CONFIG not existing";
		if [ "$1" = "stop" ]; then exit 0;
		else exit 6; fi; }

	# Read config	
	. $SQUEEZECENTER_CONFIG

	# Check for missing binaries (stale symlinks should not happen)
	# Note: Special treatment of stop for LSB conformance
	SQUEEZECENTER_BIN="$SQUEEZECENTER_HOME/squeezecenter-server"
	test -x $SQUEEZECENTER_BIN || { echo "$SQUEEZECENTER_BIN not installed"; 
		if [ "$1" = "stop" ]; then exit 0;
		else exit 5; fi; }

	# Source rc.status and reset
	. /etc/rc.status
	rc_reset

	start() {
		echo -n "Starting SqueezeCenter: "
		export HOME=$SQUEZECENTER_HOME
		startproc -u $SQUEEZECENTER_USER $SQUEEZECENTER_BIN $SQUEEZECENTER_ARGS
		rc_status -v
	}

	stop() {
		echo -n "Stopping SqueezeCenter: "
		killproc -TERM $SQUEEZECENTER_BIN
		rc_status -v
	}

	restart() {
		$0 stop
		$0 start
		rc_status
	}

	condrestart() {
		$0 status
		if test $? = 0; then
			$0 restart
		else
			rc_reset
		fi
		rc_status
	}

	fdr_status() {
		/sbin/checkproc $SQUEEZECENTER_BIN
		rc_status -v
	}

else
	exit 1
fi

# See how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart|reload|force-reload)
		restart
		;;
	condrestart|try-restart)
		condrestart
		;;
	status)
       		fdr_status
		;;
	*)
		echo "Usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
		exit 1
esac

[ -f /etc/redhat-release ] && exit $RETVAL
[ -f /etc/SuSE-release ] && rc_exit

